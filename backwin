; Common Header Stuff
#SingleInstance, Force
SetTitleMatchMode, 2 ;<-- so you can use partial window titles
Coordmode, Mouse, Screen ;<-- so you can mouse the whole screen
CoordMode, Pixel, Screen ;<-- pixel id the whole screen
SetKeyDelay 30,50 ;<-- set up basic key timing .  

; change the xy or reset and fight to be variables that you move the 
; mouse to at the start of execution. (Or just one, and the other is calculated from it)

RestartFight = 0


StartTime := A_TickCount
Sleep, 1000
ElapsedTime := Floor((A_TickCount - StartTime) /1000)
;MsgBox,  %ElapsedTime% seconds have elapsed.


; get the instance ids
WinGet, game_id, ID, Play 
WinMaximize, ahk_id %game_id%
; MsgBox, The active window's ID is "%game_id%".
;SetKeyDelay, 1000

;Sleep, 10000
;MouseGetPos, xpos, ypos 
;MsgBox, The cursor is at X%xpos% Y%ypos%. 

KeyArray := [{"mykey": "Y", "count": 0, "time": 15, "skill": "Time manipulation", "physical": "Train on dimension X"}]
KeyArray.Push({"mykey": "Numpad4", "count": 0, "time": 25, "skill": "UCW", "physical": "Smash meterorites"})
KeyArray.Push({"mykey": "Numpad3", "count": 0, "time": 25, "skill": "Ionioi hero summon", "physical": "Fly around the universe"})
KeyArray.Push({"mykey": "Numpad2", "count": 0, "time": 12, "skill": "Reflection barrier", "physical": "Fly to the moon"})
KeyArray.Push({"mykey": "Numpad1", "count": 0, "time": 12, "skill": "Gear eyes", "physical": "Carry mountains"})
KeyArray.Push({"mykey": "M", "count": 0, "time": 45, "skill": "Transformation Aura", "physical": "Fly around the world"})
KeyArray.Push({"mykey": "N", "count": 0, "time": 7, "skill": "Teleport", "physical": "Learn to fly"})
KeyArray.Push({"mykey": "B", "count": 0, "time": 12, "skill": "God Speed", "physical": "Move mountains"})
KeyArray.Push({"mykey": "K", "count": 0, "time": 61, "skill": "Big Bang", "physical": "Run with 50x gravity"})
KeyArray.Push({"mykey": "J", "count": 0, "time": 36, "skill": "108 fists of destiny", "physical": "Walk with 10x gravity"})
KeyArray.Push({"mykey": "H", "count": 0, "time": 46, "skill": "Mystic mode", "physical": "Walk on water"})
KeyArray.Push({"mykey": "G", "count": 0, "time": 10, "skill": "Aura ball", "physical": "Jump on trees"})
KeyArray.Push({"mykey": "I", "count": 0, "time": 15, "skill": "Clairvoyance", "physical": "Dive with sharks"})
;KeyArray.Push({"mykey": "U", "count": 0, "time": 12, "skill": "Ice wall", "physical": "Swim with weights"})
KeyArray.Push({"mykey": "Z", "count": 0, "time": 31, "skill": "Earth Armor", "physical": "Walk on tightropes"})
KeyArray.Push({"mykey": "LButton", "count": 0, "time": 12, "skill": "Elemental m", "physical": "Run with weights"})
KeyArray.Push({"mykey": "V", "count": 0, "time": 40, "skill": "Offense aura", "physical": "Smash rocks"})
;KeyArray.Push({"mykey": "C", "count": 0, "time": 4, "skill": "Dragon fist", "physical": "Throw spears"})
;KeyArray.Push({"mykey": "X", "count": 0, "time": 3, "skill": "Invisible hand", "physical": "Meditate"})
;KeyArray.Push({"mykey": "Numpad5", "count": 0, "time": 15, "skill": "Whirling foot", "physical": "Run in water"})
;KeyArray.Push({"mykey": "F", "count": 0, "time": 21, "skill": "Misdirection", "physical": "Climb mountains"})
;KeyArray.Push({"mykey": "D", "count": 0, "time": 15, "skill": "Defensive aura", "physical": "Jump rope"})
;KeyArray.Push({"mykey": "S", "count": 0, "time": 8, "skill": "Raging fist", "physical": "Shadow boxing"})
;KeyArray.Push({"mykey": "T", "count": 0, "time": 16, "skill": "Focused breating", "physical": "Long jumps"})
;KeyArray.Push({"mykey": "R", "count": 0, "time": 3, "skill": "Shadow fist", "physical": "Swimming"})
;KeyArray.Push({"mykey": "E", "count": 0, "time": 7, "skill": "Dodge", "physical": "Push ups"})
;KeyArray.Push({"mykey": "W", "count": 0, "time": 2, "skill": "High kick", "physical": "Sit ups"})



;does not matter which one is on top the numbers gets sent to both
outer:
loop
{   
	Sleep 1000
    For index, value in KeyArray
		KeyArray[index]["count"] -= 1
	
	RestartFight -= 1
	if GetKeyState("F2", "P")
	{
		break  ; Break out of the loop.
	}
	if RestartFight <= 0 
	{
	  Click 829, 806
      Sleep, 1000
	  Click 681, 804
	  RestartFight = 700
	  continue
	}
	
	For index, value in KeyArray{
		if (value["count"] <= 0){
			time := value["time"]
			value["count"] := time
			keytosend := value["mykey"]
			Send {%keytosend%}
			KeyArray[index] := value
			continue outer
		}
	}

	Send, Q
}
ElapsedTime := Floor((A_TickCount - StartTime) /1000)
MsgBox,  %ElapsedTime% seconds have elapsed.
ExitApp
